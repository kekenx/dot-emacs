# -*- mode: snippet -*-
# name: cbit
# key: cbit
# For binary indexed tree library for competitive programming
# --

template <typename T>
class BIT {
private:
  std::vector<T> arr;
  int n;

public:
  BIT(int n_): arr(n_ + 1, 0), n(n_) {}

  T sum(int i) {
    T ret = 0;
    while (i > 0) {
      ret += arr[i];
      i -= (i & (-i));
    }
    return ret;
  }

  T sum(int from, int to) {
    T left = sum(from - 1);
    T right = sum(to);
    return right - left;
  }
  
  void add(int i, T x) {
    while (i <= n) {
      arr[i] += x;
      i += (i & (-i));
    }
  }

};